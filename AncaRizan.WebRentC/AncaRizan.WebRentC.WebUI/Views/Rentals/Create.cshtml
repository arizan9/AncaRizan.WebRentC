@model Anca.Rizan.WebRentC.Core.ViewModels.RentalsViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Reservation</h4>
    <hr />

    @Html.ValidationSummary(true)
    <div class="form-group">
        @Html.LabelFor(model => model.CostumerID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CostumerID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CostumerID)

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Start Date" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.LocationID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => Model.LocationID, new SelectList(Model.Locations, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "LocationID" })
            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.CarID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => Model.CarID, new SelectList(Model.Cars, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "CarID" })
            @Html.ValidationMessageFor(model => model.CarID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/cssjqryUi")
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    
    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "MM/dd/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });


            $('#LocationID').change(function () {
                var selectedLocation = $("#LocationID").val();
                var carSelect = $('#CarID');
                carSelect.empty();
                if (selectedLocation != null && selectedLocation != '') {
                    $.getJSON('@Url.Action("GetCars")', { id: selectedLocation }, function (cars) {
                        if (cars != null && !jQuery.isEmptyObject(cars))
                        {
                            carSelect.append($('<option/>', {
                                value: null,
                                text: "----Select Car-------"
                            }));
                            $.each(cars, function (index, car) {
                                carSelect.append($('<option/>', {
                                    value: car.Value,
                                    text: car.Text
                                }));
                            });
                        };
                    });
                }
            });
    </script>

}
